{"version":3,"sources":["SearchPage/CategoriesList.js"],"names":["ItemCard","React","lazy","foodCategories","CategoriesList","introPageFadeTransition","a","page","document","getElementById","style","opacity","transition","wait","removeAttribute","mapListHandle","arr","map","e","key","Math","random","onClick","onClickListHandle","label","listData","data","filter","description","renderlist","sort","b","nameA","name","toUpperCase","nameB","fallback","id","kcal","serving","round","brand","listNum","window","location","pathname","includes","Number","hash","split","isNaN","S","css","setState","renderList","text","scrollTo","top","forHash","findIndex","history","pushState","backButtonHandle","back","state","this","removeAttr","xmlns","viewBox","d","Component"],"mappings":"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","file":"static/js/8.900edf79.chunk.js","sourcesContent":["import React, { Component, Suspense } from \"react\";\r\nimport { S, wait } from \"../dependencies\";\r\nimport { data } from \"../Data\";\r\n\r\nconst ItemCard = React.lazy(() => import(\"../Foods/ItemCard\"));\r\n\r\nconst foodCategories = [\r\n  \"أسماك\",\r\n  \"البيض ومنتجات الحليب\",\r\n  \"بقوليات\",\r\n  \"بذور\",\r\n  \"حبوب\",\r\n  \"حلويات\",\r\n  \"خضار\",\r\n  \"دبس\",\r\n  \"الزيت والدهون\",\r\n  \"فروج\",\r\n  \"فاكهة\",\r\n  \"معجنات\",\r\n  \"مكسرات\",\r\n  \"مكملات غذائية\",\r\n];\r\n\r\nexport default class CategoriesList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      renderList: this.mapListHandle(foodCategories),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const listNum =\r\n      window.location.pathname.includes(\"CreateNewMeal\") || window.location.pathname.includes(\"EditMeal\")\r\n        ? Number(window.location.hash.split(\"#\")[1])\r\n        : Number(window.location.hash.split(\"#\")[2]);\r\n\r\n    if (!isNaN(listNum)) {\r\n      this.onClickListHandle(foodCategories[listNum]);\r\n      this.introPageFadeTransition();\r\n    } else {\r\n      S(\"#categoriesListPageHeaderTitle\").text(\"الأصناف\");\r\n      // animation\r\n      S(\"#categoriesListBody li\").css(\"transition\", \"0\");\r\n      S(\"#categoriesListBody li\").css(\"transform\", \"scaleY(0)\");\r\n      await wait(20);\r\n      S(\"#categoriesListBody li\").removeAttr(\"style\");\r\n    }\r\n  }\r\n\r\n  introPageFadeTransition = async () => {\r\n    const page = document.getElementById(\"categoriesListPage\");\r\n    page.style.opacity = \"0\";\r\n    page.style.transition = \"opacity 350ms\";\r\n    await wait(20);\r\n    page.style.opacity = \"1\";\r\n    await wait(350);\r\n    page.removeAttribute(\"style\");\r\n  };\r\n\r\n  mapListHandle = (arr) =>\r\n    arr.map((e) => (\r\n      <li key={Math.random() * 100} onClick={() => this.onClickListHandle(e)}>\r\n        {e}\r\n      </li>\r\n    ));\r\n\r\n  onClickListHandle = async (label) => {\r\n    const listData = data.filter((e) => e.description === label);\r\n    const renderlist = listData\r\n      .sort((a, b) => {\r\n        const nameA = a.name.toUpperCase();\r\n        const nameB = b.name.toUpperCase();\r\n        if (nameA < nameB) return -1;\r\n        if (nameA > nameB) return 1;\r\n        return 0;\r\n      })\r\n      .map((e) => (\r\n        <Suspense fallback=\"\" key={Math.random() * 100}>\r\n          <ItemCard\r\n            key={e.id}\r\n            name={e.name}\r\n            kcal={e.serving ? Math.round((e.kcal / 100) * e.serving[0][1]) : e.kcal}\r\n            serving={e.serving ? e.serving[0][0] : \"كل (100) غرام\"}\r\n            id={e.id}\r\n            brand={e.brand}\r\n            description={e.description}\r\n          />\r\n        </Suspense>\r\n      ));\r\n\r\n    const listNum =\r\n      window.location.pathname.includes(\"CreateNewMeal\") || window.location.pathname.includes(\"EditMeal\")\r\n        ? Number(window.location.hash.split(\"#\")[1])\r\n        : Number(window.location.hash.split(\"#\")[2]);\r\n\r\n    // animation\r\n    if (isNaN(listNum)) {\r\n      S(\"#categoriesListBody li\").css(\"transform\", \"scaleY(0)\");\r\n      await wait(200);\r\n    }\r\n\r\n    this.setState({ renderList: renderlist });\r\n\r\n    S(\"#categoriesListPageHeaderTitle\").text(label);\r\n\r\n    if (isNaN(listNum)) {\r\n      window.scrollTo({ top: 0 });\r\n      const forHash = foodCategories.findIndex((e) => e === label);\r\n      if (window.location.pathname.includes(\"CreateNewMeal\")) {\r\n        window.history.pushState(\"\", \"\", \"/CreateNewMeal/categoriesList#\" + forHash);\r\n      } else if (window.location.pathname.includes(\"EditMeal\")) {\r\n        window.history.pushState(\"\", \"\", \"/EditMeal/categoriesList#\" + forHash);\r\n      } else {\r\n        window.history.pushState(\"\", \"\", \"/categoriesList\" + window.location.hash + \"#\" + forHash);\r\n      }\r\n    }\r\n  };\r\n\r\n  backButtonHandle = () => window.history.back();\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"categoriesListPage\">\r\n        <header id=\"categoriesListPageHeader\">\r\n          <svg id=\"categoriesListPageBack\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" onClick={this.backButtonHandle}>\r\n            <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\r\n          </svg>\r\n          <p id=\"categoriesListPageHeaderTitle\"></p>\r\n        </header>\r\n        <ul id=\"categoriesListBody\">{this.state.renderList}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}