{"version":3,"sources":["SearchPage/CategoriesList.js"],"names":["ItemCard","React","lazy","foodCategories","CategoriesList","props","useState","map","e","key","Math","random","onClick","onClickListHandle","renderList","setRenderList","useLayoutEffect","listNum","window","location","pathname","includes","Number","hash","split","isNaN","S","text","a","css","transition","transform","wait","removeAttr","anim","introPageFadeTransition","label","listData","data","filter","description","renderlist","sort","b","nameA","name","toUpperCase","nameB","fallback","id","kcal","serving","round","brand","scale","scrollTo","top","forHash","findIndex","history","pushState","xmlns","viewBox","back","d"],"mappings":"4PAMMA,EAAWC,IAAMC,MAAK,kBAAM,2CAE5BC,EAAiB,CACrB,iCACA,iHACA,6CACA,2BACA,2BACA,uCACA,2BACA,qBACA,4EACA,2BACA,iCACA,uCACA,uCACA,6EAGa,SAASC,EAAeC,GACrC,IAD4C,EAQRC,mBAAuBH,EANrDI,KAAI,SAACC,GAAD,OACN,wBAAIC,IAAqB,IAAhBC,KAAKC,SAAgBC,QAAS,kBAAMC,EAAkBL,KAC5DA,OAJqC,mBAQrCM,EARqC,KAQzBC,EARyB,KAU5CC,2BAAgB,WACd,IAAMC,EACJC,OAAOC,SAASC,SAASC,SAAS,kBAAoBH,OAAOC,SAASC,SAASC,SAAS,YACpFC,OAAOJ,OAAOC,SAASI,KAAKC,MAAM,KAAK,IACvCF,OAAOJ,OAAOC,SAASI,KAAKC,MAAM,KAAK,IAExCC,MAAMR,IAITS,YAAE,kCAAkCC,KAAK,8CAE/B,uCAAG,sBAAAC,EAAA,6DACXF,YAAE,0BAA0BG,IAAI,CAAEC,WAAY,MAC9CJ,YAAE,0BAA0BG,IAAI,CAAEE,UAAW,cAFlC,SAGLC,YAAK,IAHA,OAIXN,YAAE,0BAA0BO,WAAW,SAJ5B,2CAAH,oDAMVC,KAXArB,EAAkBV,EAAec,IACjCkB,YAAwB,yBAYzB,IAEH,IAAMtB,EAAiB,uCAAG,WAAOuB,GAAP,qBAAAR,EAAA,yDAClBS,EAAWC,IAAKC,QAAO,SAAC/B,GAAD,OAAOA,EAAEgC,cAAgBJ,KAChDK,EAAaJ,EAChBK,MAAK,SAACd,EAAGe,GACR,IAAMC,EAAQhB,EAAEiB,KAAKC,cACfC,EAAQJ,EAAEE,KAAKC,cACrB,OAAIF,EAAQG,GAAe,EACvBH,EAAQG,EAAc,EACnB,KAERxC,KAAI,SAACC,GAAD,OACH,kBAAC,WAAD,CAAUwC,SAAS,GAAGvC,IAAqB,IAAhBC,KAAKC,UAC9B,kBAACX,EAAD,CACES,IAAKD,EAAEyC,GACPJ,KAAMrC,EAAEqC,KACRK,KAAM1C,EAAE2C,QAAUzC,KAAK0C,MAAO5C,EAAE0C,KAAO,IAAO1C,EAAE2C,QAAQ,GAAG,IAAM3C,EAAE0C,KACnEC,QAAS3C,EAAE2C,QAAU3C,EAAE2C,QAAQ,GAAG,GAAK,8CACvCF,GAAIzC,EAAEyC,GACNI,MAAO7C,EAAE6C,MACTb,YAAahC,EAAEgC,YACfc,OAAO,QAKTrC,EACJC,OAAOC,SAASC,SAASC,SAAS,kBAAoBH,OAAOC,SAASC,SAASC,SAAS,YACpFC,OAAOJ,OAAOC,SAASI,KAAKC,MAAM,KAAK,IACvCF,OAAOJ,OAAOC,SAASI,KAAKC,MAAM,KAAK,KAGzCC,MAAMR,GA/Bc,uBAgCtBS,YAAE,0BAA0BG,IAAI,CAAEE,UAAW,cAhCvB,SAiChBC,YAAK,KAjCW,OAoCxBjB,EAAc0B,GAEdf,YAAE,kCAAkCC,KAAKS,GAErCX,MAAMR,KACRC,OAAOqC,SAAS,CAAEC,IAAK,IACjBC,EAAUtD,EAAeuD,WAAU,SAAClD,GAAD,OAAOA,IAAM4B,KAClDlB,OAAOC,SAASC,SAASC,SAAS,iBACpCH,OAAOyC,QAAQC,UAAU,GAAI,GAAI,iCAAmCH,GAC3DvC,OAAOC,SAASC,SAASC,SAAS,YAC3CH,OAAOyC,QAAQC,UAAU,GAAI,GAAI,4BAA8BH,GAE/DvC,OAAOyC,QAAQC,UAAU,GAAI,GAAI,kBAAoB1C,OAAOC,SAASI,KAAO,IAAMkC,IAhD9D,4CAAH,sDAuDvB,OACE,yBAAKR,GAAG,sBACN,4BAAQA,GAAG,4BACT,yBAAKA,GAAG,yBAAyBY,MAAM,6BAA6BC,QAAQ,YAAYlD,QALrE,kBAAMM,OAAOyC,QAAQI,SAMtC,0BAAMC,EAAE,kEAEV,uBAAGf,GAAG,mCAER,wBAAIA,GAAG,sBAAsBnC,M","file":"static/js/5.d67c116b.chunk.js","sourcesContent":["import React, { Suspense, useState, useLayoutEffect } from \"react\";\r\nimport \"../Styles/CategoriesList.css\";\r\nimport { wait, introPageFadeTransition } from \"../dependencies\";\r\nimport { S } from \"selector_dom\";\r\nimport { data } from \"../Data\";\r\n\r\nconst ItemCard = React.lazy(() => import(\"../Foods/ItemCard\"));\r\n\r\nconst foodCategories = [\r\n  \"أسماك\",\r\n  \"البيض ومنتجات الحليب\",\r\n  \"بقوليات\",\r\n  \"بذور\",\r\n  \"حبوب\",\r\n  \"حلويات\",\r\n  \"خضار\",\r\n  \"دبس\",\r\n  \"الزيت والدهون\",\r\n  \"فروج\",\r\n  \"فاكهة\",\r\n  \"معجنات\",\r\n  \"مكسرات\",\r\n  \"مكملات غذائية\",\r\n];\r\n\r\nexport default function CategoriesList(props) {\r\n  const mapListHandle = (arr) =>\r\n    arr.map((e) => (\r\n      <li key={Math.random() * 100} onClick={() => onClickListHandle(e)}>\r\n        {e}\r\n      </li>\r\n    ));\r\n\r\n  const [renderList, setRenderList] = useState(mapListHandle(foodCategories));\r\n\r\n  useLayoutEffect(() => {\r\n    const listNum =\r\n      window.location.pathname.includes(\"CreateNewMeal\") || window.location.pathname.includes(\"EditMeal\")\r\n        ? Number(window.location.hash.split(\"#\")[1])\r\n        : Number(window.location.hash.split(\"#\")[2]);\r\n\r\n    if (!isNaN(listNum)) {\r\n      onClickListHandle(foodCategories[listNum]);\r\n      introPageFadeTransition(\"categoriesListPage\");\r\n    } else {\r\n      S(\"#categoriesListPageHeaderTitle\").text(\"الأصناف\");\r\n      // animation\r\n      const anim = async () => {\r\n        S(\"#categoriesListBody li\").css({ transition: \"0\" });\r\n        S(\"#categoriesListBody li\").css({ transform: \"scaleY(0)\" });\r\n        await wait(20);\r\n        S(\"#categoriesListBody li\").removeAttr(\"style\");\r\n      };\r\n      anim();\r\n    }\r\n  }, []);\r\n\r\n  const onClickListHandle = async (label) => {\r\n    const listData = data.filter((e) => e.description === label);\r\n    const renderlist = listData\r\n      .sort((a, b) => {\r\n        const nameA = a.name.toUpperCase();\r\n        const nameB = b.name.toUpperCase();\r\n        if (nameA < nameB) return -1;\r\n        if (nameA > nameB) return 1;\r\n        return 0;\r\n      })\r\n      .map((e) => (\r\n        <Suspense fallback=\"\" key={Math.random() * 100}>\r\n          <ItemCard\r\n            key={e.id}\r\n            name={e.name}\r\n            kcal={e.serving ? Math.round((e.kcal / 100) * e.serving[0][1]) : e.kcal}\r\n            serving={e.serving ? e.serving[0][0] : \"كل (100) غرام\"}\r\n            id={e.id}\r\n            brand={e.brand}\r\n            description={e.description}\r\n            scale={true}\r\n          />\r\n        </Suspense>\r\n      ));\r\n\r\n    const listNum =\r\n      window.location.pathname.includes(\"CreateNewMeal\") || window.location.pathname.includes(\"EditMeal\")\r\n        ? Number(window.location.hash.split(\"#\")[1])\r\n        : Number(window.location.hash.split(\"#\")[2]);\r\n\r\n    // animation\r\n    if (isNaN(listNum)) {\r\n      S(\"#categoriesListBody li\").css({ transform: \"scaleY(0)\" });\r\n      await wait(200);\r\n    }\r\n\r\n    setRenderList(renderlist);\r\n\r\n    S(\"#categoriesListPageHeaderTitle\").text(label);\r\n\r\n    if (isNaN(listNum)) {\r\n      window.scrollTo({ top: 0 });\r\n      const forHash = foodCategories.findIndex((e) => e === label);\r\n      if (window.location.pathname.includes(\"CreateNewMeal\")) {\r\n        window.history.pushState(\"\", \"\", \"/CreateNewMeal/categoriesList#\" + forHash);\r\n      } else if (window.location.pathname.includes(\"EditMeal\")) {\r\n        window.history.pushState(\"\", \"\", \"/EditMeal/categoriesList#\" + forHash);\r\n      } else {\r\n        window.history.pushState(\"\", \"\", \"/categoriesList\" + window.location.hash + \"#\" + forHash);\r\n      }\r\n    }\r\n  };\r\n\r\n  const backButtonHandle = () => window.history.back();\r\n\r\n  return (\r\n    <div id=\"categoriesListPage\">\r\n      <header id=\"categoriesListPageHeader\">\r\n        <svg id=\"categoriesListPageBack\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" onClick={backButtonHandle}>\r\n          <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\r\n        </svg>\r\n        <p id=\"categoriesListPageHeaderTitle\"></p>\r\n      </header>\r\n      <ul id=\"categoriesListBody\">{renderList}</ul>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}