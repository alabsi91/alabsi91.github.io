{"version":3,"sources":["SearchPage/CategoriesList.js"],"names":["ItemCard","React","lazy","foodCategories","CategoriesList","mapListHandle","arr","map","e","key","Math","random","onClick","onClickListHandle","label","a","listData","data","filter","description","renderlist","sort","b","nameA","name","toUpperCase","nameB","fallback","id","kcal","serving","round","brand","scale","listNum","window","location","pathname","includes","Number","hash","split","isNaN","S","css","transform","wait","setState","renderList","text","scrollTo","top","forHash","findIndex","history","pushState","backButtonHandle","back","state","transition","removeAttr","anim","this","introPageFadeTransition","xmlns","viewBox","d","Component"],"mappings":"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","file":"static/js/5.6468c434.chunk.js","sourcesContent":["import React, { Suspense, Component } from \"react\";\r\nimport \"../Styles/CategoriesList.css\";\r\nimport { wait, introPageFadeTransition } from \"../dependencies\";\r\nimport { S } from \"selector_dom\";\r\nimport { data } from \"../Data\";\r\n\r\nconst ItemCard = React.lazy(() => import(\"../Foods/ItemCard\"));\r\n\r\nconst foodCategories = [\r\n  'أسماك',\r\n  'البيض ومنتجات الحليب',\r\n  'بقوليات',\r\n  'بذور',\r\n  'حبوب',\r\n  'البسكوت والحلويات',\r\n  'خضار',\r\n  'الدبس والصلصات',\r\n  'الزيت والدهون',\r\n  'فروج',\r\n  'فاكهة',\r\n  'لحوم مصنعة',\r\n  'معجنات',\r\n  'مكسرات',\r\n  'مكملات غذائية',\r\n];\r\n\r\nexport default class CategoriesList extends Component {\r\n  constructor() {\r\n        super()\r\n        this.state = {\r\n          renderList: this.mapListHandle(foodCategories)\r\n        }\r\n  }\r\n    \r\n  componentDidMount() {\r\n        const listNum =\r\n      window.location.pathname.includes(\"CreateNewMeal\") || window.location.pathname.includes(\"EditMeal\")\r\n        ? Number(window.location.hash.split(\"#\")[1])\r\n        : Number(window.location.hash.split(\"#\")[2]);\r\n\r\n    if (!isNaN(listNum)) {\r\n      this.onClickListHandle(foodCategories[listNum]);\r\n      introPageFadeTransition(\"categoriesListPage\");\r\n    } else {\r\n      S(\"#categoriesListPageHeaderTitle\").text(\"الأصناف\");\r\n      // animation\r\n      const anim = async () => {\r\n        S(\"#categoriesListBody li\").css({ transition: \"0\" });\r\n        S(\"#categoriesListBody li\").css({ transform: \"scaleY(0)\" });\r\n        await wait(20);\r\n        S(\"#categoriesListBody li\").removeAttr(\"style\");\r\n      };\r\n      anim();\r\n    }\r\n      }\r\n   mapListHandle = (arr) =>\r\n    arr.map((e) => (\r\n      <li key={Math.random() * 100} onClick={() => this.onClickListHandle(e)}>\r\n        {e}\r\n      </li>\r\n    ));\r\n\r\n\r\n\r\n   onClickListHandle = async (label) => {\r\n    const listData = data.filter((e) => e.description === label);\r\n    const renderlist = listData\r\n      .sort((a, b) => {\r\n        const nameA = a.name.toUpperCase();\r\n        const nameB = b.name.toUpperCase();\r\n        if (nameA < nameB) return -1;\r\n        if (nameA > nameB) return 1;\r\n        return 0;\r\n      })\r\n      .map((e) => (\r\n        <Suspense fallback=\"\" key={Math.random() * 100}>\r\n          <ItemCard\r\n            key={e.id}\r\n            name={e.name}\r\n            kcal={e.serving ? Math.round((e.kcal / 100) * e.serving[0][1]) : e.kcal}\r\n            serving={e.serving ? e.serving[0][0] : \"كل (100) غرام\"}\r\n            id={e.id}\r\n            brand={e.brand}\r\n            description={e.description}\r\n            scale={true}\r\n          />\r\n        </Suspense>\r\n      ));\r\n\r\n    const listNum =\r\n      window.location.pathname.includes(\"CreateNewMeal\") || window.location.pathname.includes(\"EditMeal\")\r\n        ? Number(window.location.hash.split(\"#\")[1])\r\n        : Number(window.location.hash.split(\"#\")[2]);\r\n\r\n    // animation\r\n    if (isNaN(listNum)) {\r\n      S(\"#categoriesListBody li\").css({ transform: \"scaleY(0)\" });\r\n      await wait(200);\r\n    }\r\n\r\n     this.setState({ renderList: renderlist });\r\n\r\n    S(\"#categoriesListPageHeaderTitle\").text(label);\r\n\r\n    if (isNaN(listNum)) {\r\n      window.scrollTo({ top: 0 });\r\n      const forHash = foodCategories.findIndex((e) => e === label);\r\n      if (window.location.pathname.includes(\"CreateNewMeal\")) {\r\n        window.history.pushState(\"\", \"\", \"/CreateNewMeal/categoriesList#\" + forHash);\r\n      } else if (window.location.pathname.includes(\"EditMeal\")) {\r\n        window.history.pushState(\"\", \"\", \"/EditMeal/categoriesList#\" + forHash);\r\n      } else {\r\n        window.history.pushState(\"\", \"\", \"/categoriesList\" + window.location.hash + \"#\" + forHash);\r\n      }\r\n    }\r\n  };\r\n\r\n   backButtonHandle = () => window.history.back();\r\n\r\n  render()\r\n  {return (\r\n    <div id=\"categoriesListPage\">\r\n      <header id=\"categoriesListPageHeader\">\r\n        <svg id=\"categoriesListPageBack\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" onClick={this.backButtonHandle}>\r\n          <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\r\n        </svg>\r\n        <p id=\"categoriesListPageHeaderTitle\"></p>\r\n      </header>\r\n      <ul id=\"categoriesListBody\">{this.state.renderList}</ul>\r\n    </div>\r\n  );}\r\n}\r\n"],"sourceRoot":""}